.. role:: raw-html-m2r(raw)
   :format: html


01.语法规则
==================

1.类型别名
-----------

引入类型别名这个特性是为了方便程序员写代码，比如说不再需要写完整的较长的类型名，而只需要写简短的类型别名

语法规则
^^^^^^^^

.. code-block:: plain

   1）语法一：typedef src_type alias_type
   2）语法二：using alias_type = src_type（from c++11）

.. note::
   一般来说，推荐使用\ ``using``\ 这种语法，因为当接触到数组类型时，\ ``using``\ 会更直观（如下例所示）;
   另外 `typedef不支持模板类别名 <https://www.cnblogs.com/yutongqing/p/6794652.html>`_
.. code-block:: c++

   int arr[4];
   typedef int IntArr[4];  // [4]需要写在后面
   using IntArr = int[4];

size_t
^^^^^^

``size_t``\ 类型是一个类型别名；是\ `sizeof <https://en.cppreference.com/w/c/language/sizeof>`_\ 函数返回对象的类型(size type)，是一个无符号的整型，它的大小是由操作系统所决定的；
在实现动态分配内存时很有用。

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210728200535276.png" alt="image-20210728200535276" style="zoom: 67%;" />`

.. attention:: 
   标准库中的operator[]也涉及\ ``size_t``\ ，所以遍历时用unsigned或者int去访问可能会出错

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210728200948093.png" alt="image-20210728200948093" style="zoom: 50%;" />`


02. 宏
--------------
语法规则
^^^^^^^^^
 :raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210803143453257.png" alt="image-20210803143453257" style="zoom: 50%;" />`


03.引用 
--------
const左值引用和右值引用能够延展临时变量的生存期
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code-block:: c++

   #include <iostream>
   using namespace std;

   int main() {
      double tc = 21.5;
      /*
      * 以下近似于：创建一个临时变量，然后对其进行绑定
      * double temp = 7.07;
      * const double &rd1 = temp;
      * 在语法上只有const左值引用才能绑定临时变量，否则有如下报错：
      * “non-const lvalue reference to double can not bind a temporary of type double”
      */
      const double &rd1 = 7.07;

      // 通过const左值引用或右值引用对临时变量起别名，临时变量的lifetime会被extend
      double &&rd2 = 7.07;
      rd2 = 33;
   }

.. note:: 
   const左值引用，不能修改该临时变量（或称不具名变量/匿名变量）；右值引用，才可以修改该临时变量
   