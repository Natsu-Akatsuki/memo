.. role:: raw-html-m2r(raw)
   :format: html


01. 网络配置
============

`ubuntu server使用的是systemd-networkd（也称networkd）来管理网络，ubuntu desktop使用的是network-manager（也称NetworkManger）来管理网络 <https://www.reddit.com/r/linuxadmin/comments/klhcpt/few_questions_about_networkmanager_vs/>`_

查看已有的网卡设备
------------------

.. prompt:: bash $,# auto

   $ sudo lshw -c network

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/say9gPr5ThtYx2lU.png!thumbnail" alt="img" style="zoom: 67%; " />`

启动网卡(for ip)
----------------

.. prompt:: bash $,# auto

   # 查看网卡是否启动（看是DOWN还是UP）
   $ ip link


.. image:: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210827010043385.png
   :target: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210827010043385.png
   :alt: image-20210827010043385


.. prompt:: bash $,# auto

   # 根据man ip，此处的link的含义为network device 
   $ ip link set <网卡名interface> up/down

----

**HINT**


#. 
   `网卡和其对应属性 <https://blog.csdn.net/dxt16888/article/details/80741175>`_\ ：

   eth/eno：有线网卡

   elan/wlo：无线网卡

   br：该网卡与桥接有关

#. 
   ``DOWN``\ 的情况有两种，一种是硬件上没联网（没插网线、没连wifi），二是软件上DOWN了（这种才可以命令行UP回去）

----

wifi配置(for nmcli)
-------------------

显示可连接的wifi信息

.. prompt:: bash $,# auto

   $ nmcli dev wifi

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210825174133504.png" alt="image-20210825174133504" style="zoom:67%; " />`

显示当前wifi的相关信息
^^^^^^^^^^^^^^^^^^^^^^

.. prompt:: bash $,# auto

   $ nmcli dev wifi show

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210825173513012.png" alt="image-20210825173513012" style="zoom:67%; " />`

命令行连接wifi
^^^^^^^^^^^^^^

.. prompt:: bash $,# auto

   $ sudo nmcli dev wifi connect <wifi_ssid> password <password>

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210825173745117.png" alt="image-20210825173745117" style="zoom:67%; " />`

有线连接配置(for nmcli)
-----------------------

命令行连接
^^^^^^^^^^

.. prompt:: bash $,# auto

   $ connection_name=<...>
   # 静态ip配置
   $ nmcli connection modify ${connection_name} 
           ipv4.method manual \
           ipv4.addresses 192.168.1.100/16 \
           ipv4.gateway 192.168.1.1
   # 动态ip配置
   $ nmcli connection modify ${connection_name} ipv4.method auto

----

**NOTE**

nmcli的 ``connection`` 指配置文档，相关的配置文档放置于 ``/etc/NetworkManager/system-connections`` ，可查看wifi的密码


.. image:: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/dhPmwMUEss3Navaz.png!thumbnail
   :target: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/dhPmwMUEss3Navaz.png!thumbnail
   :alt: img


----

图形化界面连接
^^^^^^^^^^^^^^

.. prompt:: bash $,# auto

   $ nm-connection-editor

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210826230913278.png" alt="image-20210826230913278" style="zoom:67%; " />`

拓展资料(for nmcli)
-------------------


#. `使用nmcli配置网络 <https://blog.csdn.net/m0_37264220/article/details/103995359>`_

配置网络(for `netplan <https://netplan.io/reference/>`_\ )
------------------------------------------------------------

``netplan`` 的用于生成不同backend（networkd或NetworkManger）的配置文档

----

**NOTE**


#. 写在\ ``/etc/netplan``\ 的配置文档的文件名需要以数字为前缀，如\ ``00-netplan.yaml``
#. 经实测，静态ip时一定要添加\ ``nameserver``\ ，\ ``gateway``\ (default为0.0.0.0/0)

----

命令行
^^^^^^

.. prompt:: bash $,# auto

   # --debug项为可选，作用依次为生成配置文档和使配置文档生效
   $ sudo netplan --debug generate
   $ sudo netplan --debug apply

配置文档
^^^^^^^^

.. code-block:: yaml

   network:
     version: 2
     renderer: NetworkManager

配置有线连接，使用静态ip
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   network:
     version: 2
     renderer: NetworkManager
     ethernets:
       eno1:
         addresses:
           - 10.23.21.96/24
         gateway4: 10.23.21.1
         nameservers:
           addresses:
             - 222.200.115.251
             - 222.200.115.252
             - 119.29.29.29

配置有线连接，使用动态ip
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   network:
     version: 2
     renderer: NetworkManager
     ethernets:
       eno1:
         dhcp4: true

`配置wifi，使用动态ip <https://netplan.io/>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   network:
     version: 2
     renderer: NetworkManager
     wifis:
       wlo1: # <dev_name>
         dhcp4: yes
         dhcp6: yes
         access-points:
           "5-108": # <ssid>
             password: "23130123" # <password>
         routes:
           - to: 0.0.0.0/0
             via: 192.168.10.1

配置wifi，使用静态ip
~~~~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   network:
     version: 2
     renderer: NetworkManager
     wifis:
       wlo1:
         dhcp4: no
         dhcp6: no
         addresses: [192.168.10.50/24]
         nameservers:
           addresses: [223.5.5.5, 223.6.6.6]
         access-points:
           "5-108":
             password: "23130123"
         routes:
           - to: 0.0.0.0/0
             via: 192.168.10.1

绑定多张有线网卡以网络冗余
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   network:
     version: 2
     renderer: networkd
     ethernets:
       eno1np0:
         dhcp4: yes
       eno2np1:
         dhcp4: yes
     bonds:
       bond0:
         addresses:
           - 10.23.21.110/24
         gateway4: 10.23.21.1
         interfaces:
           - eno1np0
           - eno2np1
         nameservers:
           addresses:
             - 222.200.115.251
             - 222.200.115.252
             - 119.29.29.29
         parameters:
           down-delay: 0
           gratuitious-arp: 1
           mode: active-backup
           primary: eno2np1

拓展资料
~~~~~~~~


#. 服务切换：\ `Network Manager切换到systemd-networkd <https://www.xmodulo.com/switch-from-networkmanager-to-systemd-networkd.html>`_\ ，\ `译文 <https://m.linuxidc.com/Linux/2015-11/125430.htm>`_
#. `bonding的若干种模式介绍 <https://askubuntu.com/questions/464747/channel-bonding-modes>`_
#. `LACP配置实战 <https://www.snel.com/support/how-to-set-up-lacp-bonding-on-ubuntu-18-04-with-netplan/>`_

查看DNS server
--------------

.. prompt:: bash $,# auto

   $ systemd-resolve --status


.. image:: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210826231213916.png
   :target: https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210826231213916.png
   :alt: image-20210826231213916


----

**NOTE**


#. 常用DNS servers

.. code-block:: plain

   # 阿里云
   nameserver 223.5.5.5
   nameserver 223.6.6.6

   # 百度
   nameserver 180.76.76.76

   # 腾讯
   nameserver 119.29.29.29 

   # google
   nameserver 8.8.8.8


#. 
   dns的配置可以使用nmcli, netplan, 在\ ``/etc/resolv.conf``\ 增加nameserver，或图形化界面上进行修改均可，不赘述

#. 
   ``/etc/resolv.conf``\ 的配置只起临时修改作用，重启后会恢复回原来的状态；使其生效需要

.. prompt:: bash $,# auto

   $ sudo service resolvconf restart


#. 配置文档总的其余配置参数（e.g. domain和search）可参考\ `link <https://blog.csdn.net/u010472499/article/details/95216015>`_

----

`使用arp查看是否ip冲突 <https://www.unixmen.com/find-ip-conflicts-linux/>`_
-------------------------------------------------------------------------------

.. prompt:: bash $,# auto

   $ sudo apt install arp-scan
   $ sudo arp-scan -l <-I device_name>
   # -I 指定网卡设备
   # -l Generate  addresses from network interface configuration

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/6kl0A3112mKoYEFw.png!thumbnail" alt="img" style="zoom:67%; " />`

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/JdGUZH5wPVkEQhnp.png!thumbnail" alt="img" style="zoom:50%; " />`

查看是否正常地分配到ip
----------------------


* 网卡已正确获取IP地址：

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/pb4XovJl3q1QlGQ1.png!thumbnail" style="zoom: 80%; " />`


* 网卡未正确获得IP地址：

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/pb4XovJl3q1QlGQ1.png!thumbnail" alt="img" style="zoom: 80%; " />`

监听端口
--------

.. prompt:: bash $,# auto

   $ netstat
   # -a: all
   # -n：(numerical)显示数值型地址
   # -l：(listen)仅显示正在监听的sockets
   # -p：显示socket对应的pid和程序
   # -t: 列出tcp封包信息（一般与浏览器有关）
   # -u：列出utp封包信息
   $ sudo netstat -anp | grep 32345

路由跟踪
--------

.. prompt:: bash $,# auto

   $ traceroute <ip/domain_name>

实战
----

网络故障排除清单
^^^^^^^^^^^^^^^^


* 是否有网卡，有网卡后，网卡是否启动
* 网卡是否正确的配置，用ifconfig判断是否正确获得了ip
* dns是否正确的配置
* 是否有ip冲突（使用DHCP自动分配或重新静态绑定个未使用的ip）
* 是否启动了代理

拓展插件
--------

实时查看网速
^^^^^^^^^^^^

.. prompt:: bash $,# auto

   $ sudo apt install ethstatus 
   # 监控特定网卡 ethstatus -i <inferface_name>
   $ ethstatus -i eno1

限制网速
^^^^^^^^

----

**ATTENTION**


* 注意需要sudo，否则配置不生效
* 此处是 bps ，而不是 Bps

----

.. prompt:: bash $,# auto

   # 设置限速 
   # sudo wondershaper 10000 10000
   $ sudo wondershaper <device_name> <下行速度bps> <上行速度bps>
   # 取消限速 sudo wondershaper clear eno1
   $ sudo wondershaper clear <device_name>

测速
^^^^

.. prompt:: bash $,# auto

   $ sudo apt install speedtest-cli
   $ speedtest-cli --bytes

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/bvvQm0BFO9Ber3EB.png!thumbnail" alt="img" style="zoom:67%; " />`

远程登录
^^^^^^^^

.. prompt:: bash $,# auto

   # 安装这个别人才能ssh到本机
   $ sudo apt install openssh-server

在线网站测试工具
^^^^^^^^^^^^^^^^


#. http://tool.chinaz.com/

:raw-html-m2r:`<img src="https://natsu-akatsuki.oss-cn-guangzhou.aliyuncs.com/img/image-20210827142503797.png" alt="image-20210827142503797" style="zoom:67%; " />`
