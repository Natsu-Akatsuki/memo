{
    "actionButtons": {
        "defaultColor": "#ff0034", // Can also use string color names.
        "loadNpmCommands": false, // Disables automatic generation of actions for npm commands.
        "reloadButton": "♻️", // 触发配置生效
        "commands": [
            {
                "cwd": "${workspaceFolder}", // cd workspace
                "name": "m2r", // terminal name/ tip name
                "color": "green",
                "singleInstance": false,
                "command": "vscode_m2r ${file}", // This is executed in the terminal.
            }
        ]
    },
    "key": "cmd+,",
    "command": "workbench.action.openSettings",
    "args": {
        "openToSide": true
    },
    // v1.6内置括号功能
    "editor.bracketPairColorization.enabled": true,
    "terminal.integrated.inheritEnv": false,
    "C_Cpp.updateChannel": "Insiders",
    "explorer.confirmDelete": false,
    "python.pythonPath": "/usr/bin/python3",
    "python.languageServer": "Pylance",
    "settingsSync.ignoredExtensions": [],
    "editor.formatOnPaste": true,
    "python.defaultInterpreterPath": "/home/helios/anaconda3/envs/sleipnir/bin/python",
    "security.workspace.trust.untrustedFiles": "open",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "workbench.colorTheme": "GitHub Light Default",
    "workbench.iconTheme": "material-icon-theme",
    "[cpp]": {
        "editor.defaultFormatter": "ms-vscode.cpptools",
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
    },
    "python.formatting.provider": "black",
    "cmake.configureOnOpen": true,
    "github-enterprise.uri": "vscode://vscode.github-authentication/did-authenticate?windowid=1&code=949cdb8c863d717e7e44&state=35de4999-47df-4281-a718-2112dec9d704",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google}",
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "tabnine.experimentalAutoImports": true,
    "window.zoomLevel": 1,
    "[xml]": {
        "editor.defaultFormatter": "fabianlauer.vs-code-xml-format"
    },
    "redhat.telemetry.enabled": true,
    // 支持滚轮
    "editor.mouseWheelZoom": true,
    "[markdown]": {
        "editor.defaultFormatter": "mervin.markdown-formatter"
    },
    "restructuredtext.experimental": true,
    "cSpell.userWords": [
        "SPONGEBOB"
    ],
    "kite.codefinder.enableLineDecoration": true,
    "kite.completions.disabledFileExtensions": [],
    "kite.showWelcomeNotificationOnStartup": false,
    "[c]": {
        "editor.defaultFormatter": "ms-vscode.cpptools"
    },
    "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": true,
    "c-cpp-flylint.flawfinder.enable": false,
    "c-cpp-flylint.flexelint.enable": false,
    "c-cpp-flylint.lizard.enable": false,
    "files.autoSave": "onFocusChange",
    "launch": {
        // Use IntelliSense to learn about possible attributes.
        // Hover to view descriptions of existing attributes.
        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
        "version": "0.2.0",
        "configurations": [
            {
                // name- the reader-friendly name to appear in the Debug launch configuration dropdown.
                // program - executable or file to run when launching the debugger
                // args - arguments passed to the program to debug
                // env - environment variables (the value null can be used to "undefine" a variable)
                // envFile - path to dotenv file with environment variables
                // cwd - current working directory for finding dependencies and other files
                // port - port when attaching to a running process
                // stopOnEntry - break immediately when the program launches
                // console - what kind of console to use, for example, internalConsole, integratedTerminal, or externalTerminal
                "name": "attach a process",
                "type": "cppdbg",
                "request": "attach",
                "program": "...",
                "processId": "${command:pickProcess}",
                "externalConsole": false,
                "MIMode": "gdb",
                "setupCommands": [
                    {
                        "description": "enable pretty printing",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ],
            }
        ]
    }
}
