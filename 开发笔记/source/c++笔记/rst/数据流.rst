
数据流
======

格式化设置
----------

全局格式化
^^^^^^^^^^

.. code-block:: c++

   // 增设符号
   std::cout.setf(std::iso_base::showpos)
   // 输出长度（被触发后会重置）
   std::cout.width(10)
   // 占位所填充值
   std::cout.fill('.')

局部格式化（操纵符）
^^^^^^^^^^^^^^^^^^^^


* manupilator ≠ operator

.. code-block:: c++

   #include <iomanip>
   std::cout << std::setw(10) << x << std::endl;

文件流
------


* 流即c++用于处理文件和内存的模板类
* 文件流对象有打开和关闭的状态，处于打开状态后无法再次打开，可以用is_open来判断该对象是否有绑定/关联一个文件
* 
  C++处理文件，有三个类模板，basic_ifstream，basic_ofstream，basic_fstream

* 
  其析构函数会调用close来取消关联，所以不一定要显式close

文件读写模式
^^^^^^^^^^^^

.. code-block:: c++

   #include <fstream>
   using namespace std;
   int main() {
     // 覆写文件
     // ofstream outFile("myfile.txt", std::ios::out | std::ios::ate);
     // 追加数据
     // ofstream outFile("myfile.txt", std::ios::out | std::ios::app);
     ofstream outFile("myfile.txt");
     outFile << "ABC";
     return 0;
   }
