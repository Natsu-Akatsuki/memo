# >>> 基础镜像 >>>
FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu20.04

# >>> 修改源，并安装apt包 >>>
RUN sed -i s@/archive.ubuntu.com/@/mirrors.gdut.edu.cn/@g /etc/apt/sources.list \
    && apt update
    && DEBIAN_FRONTEND=noninteractive apt install -y \
        apt-utils \
        bash-completion \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        git \
        keyboard-configuration \
        libx11-dev \
        locales \
        lsb-core \
        mlocate \
        nano \
        net-tools \        
        openssh-server \
        software-properties-common \
        vim \
        wget \
        gcc-9 g++-9 gcc-10 g++-10 \
    && rm -rf /var/lib/apt/lists/*

# >>> 安装ROS2 >>>
SHELL ["/bin/bash", "-c"]
RUN DEBIAN_FRONTEND=noninteractive apt install -y software-properties-common \
    && apt install curl gnupg2 \
    && echo "deb https://mirrors.tuna.tsinghua.edu.cn/ros2/ubuntu/ focal main" | tee /etc/apt/sources.list.d/ros2-latest.list > /dev/null \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
    && echo "source /opt/ros/galactic/setup.bash" >> ~/.bashrc \
    && apt update \
    && apt install -y ros-galactic-desktop python3-colcon-common-extensions \
    && rm -rf /var/lib/apt/lists/*

# >>> nvidia-container-runtime >>>
ENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# >>> 安装python包 >>>
RUN DEBIAN_FRONTEND=noninteractive apt update \
    && apt install -y \
        python3-pip \
        python3-pyqt5.qtserialport \
    && rm -rf /var/lib/apt/lists/* \
    && pip3 install --no-cache-dir \
    catkin_pkg \
    netifaces \
    rospkg \
    defusedxml \
    easydict \
    empy \
    fire \
    gdown \
    matplotlib \
    opencv-python \
    pandas \
    pygeodesy \
    tqdm \
    pybind11[global]

# >>> 解决中文显示乱码问题 >>>
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

# >>> 安装pytorch >>>
RUN pip3 install --no-cache-dir torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio==0.10.1+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html

# >>> 安装最新版TensorRT >>>
RUN DEBIAN_FRONTEND=noninteractive wget -c "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin" \
    && mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 \
    && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub \
    && add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /" \
    && apt update \
    && apt install -y libnvinfer8 libnvonnxparsers8 libnvparsers8 libnvinfer-plugin8 libnvinfer-dev libnvonnxparsers-dev libnvparsers-dev libnvinfer-plugin-dev \
    && rm -rf /var/lib/apt/lists/*

# >>> 安装gtsam,osqp,ceres >>>
RUN  cd /tmp \
    && git clone --depth=1 https://github.com/borglab/gtsam.git gtsam \
    && cd gtsam \
    && mkdir build && cd build && cmake .. \
    && make -j$(nproc) && make install \
    && DEBIAN_FRONTEND=noninteractive apt update \
    && apt install -y libgoogle-glog-dev libgflags-dev libatlas-base-dev libeigen3-dev libsuitesparse-dev \
    && wget -c http://ceres-solver.org/ceres-solver-2.0.0.tar.gz -O /tmp/ceres-solver-2.0.0.tar.gz \
    && cd /tmp \
    && tar -xzvf ceres-solver-2.0.0.tar.gz \
    && cd /tmp/ceres-solver-2.0.0 \
    && mkdir build && cd build && cmake .. \
    && make -j$(nproc) \
    && make install \
    && cd /tmp/ \
    && git clone --depth=1 --recursive https://github.com/osqp/osqp osqp \
    && cd osqp && mkdir build && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && make install \
    && rm -rf /tmp/*